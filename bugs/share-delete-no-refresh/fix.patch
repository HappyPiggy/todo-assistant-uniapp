diff --git a/pages/settings/components/ImportShare.vue b/pages/settings/components/ImportShare.vue
index 41244e7..acfbc20 100644
--- a/pages/settings/components/ImportShare.vue
+++ b/pages/settings/components/ImportShare.vue
@@ -3,7 +3,7 @@
     <!-- 输入区域 -->
     <view class="input-section">
       <view class="input-container">
-        <text class="input-label">请输入6位分享码</text>
+        <text class="input-label">请输入6位分享码（支持大小写）</text>
         <input 
           class="share-code-input"
           v-model="shareCode"
@@ -139,7 +139,7 @@ const handleInput = (e) => {
 
 const validateShareCode = () => {
   if (shareCode.value && !isValidShareCode.value) {
-    inputError.value = '请输入6位字母数字组合'
+    inputError.value = '请输入6位字母和数字组合'
   } else {
     inputError.value = ''
   }
@@ -235,7 +235,12 @@ onMounted(() => {
 
 <style lang="scss" scoped>
 .import-share {
-  padding: 20px;
+  padding: 16rpx 20rpx; // 使用rpx单位，在小屏幕上减少padding
+  
+  // 小屏幕适配
+  @media (max-width: 375px) {
+    padding: 12rpx 16rpx;
+  }
 }
 
 .input-section {
@@ -254,15 +259,16 @@ onMounted(() => {
     .share-code-input {
       width: 100%;
       height: 48px;
-      padding: 0 16px;
-      font-size: 18px;
+      padding: 0 12px; // 减少水平内边距
+      font-size: 16px; // 减小字体
       font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
       font-weight: 600;
-      letter-spacing: 2px;
+      letter-spacing: 1.5px; // 减小字符间距
       text-align: center;
       border: 2px solid #e9ecef;
       border-radius: 8px;
       background-color: #ffffff;
+      box-sizing: border-box;
       
       &:focus {
         border-color: #007AFF;
@@ -274,6 +280,13 @@ onMounted(() => {
         font-weight: normal;
         letter-spacing: normal;
       }
+      
+      // 小屏幕适配
+      @media (max-width: 375px) {
+        font-size: 14px;
+        letter-spacing: 1px;
+        padding: 0 8px;
+      }
     }
     
     .error-text {
@@ -468,23 +481,37 @@ onMounted(() => {
   .history-codes {
     display: flex;
     flex-wrap: wrap;
-    gap: 8px;
+    gap: 6px; // 减小间距
     
     .history-code {
-      padding: 8px 12px;
+      padding: 6px 10px; // 减小内边距
       background-color: #f8f9fa;
       border: 1px solid #e9ecef;
       border-radius: 6px;
+      max-width: calc(50% - 3px); // 限制最大宽度，确保不会超出
+      box-sizing: border-box;
       
       &:active {
         background-color: #e9ecef;
       }
       
       .code-text {
-        font-size: 14px;
+        font-size: 13px; // 减小字体
         font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
         color: #007AFF;
         font-weight: 500;
+        word-break: break-all;
+        overflow-wrap: break-word;
+      }
+      
+      // 小屏幕适配
+      @media (max-width: 375px) {
+        padding: 4px 8px;
+        max-width: calc(33.33% - 4px);
+        
+        .code-text {
+          font-size: 12px;
+        }
       }
     }
   }
diff --git a/pages/settings/components/ShareList.vue b/pages/settings/components/ShareList.vue
index e8bc019..d24bcc4 100644
--- a/pages/settings/components/ShareList.vue
+++ b/pages/settings/components/ShareList.vue
@@ -111,8 +111,8 @@ const props = defineProps({
 // Emits
 const emit = defineEmits(['delete', 'refresh'])
 
-// 组合式函数
-const { deleteShare, copyToClipboard } = useShareData()
+// 组合式函数 - 只保留复制功能
+const { copyToClipboard } = useShareData()
 
 // 响应式数据
 const deletePopupRef = ref(null)
@@ -178,17 +178,32 @@ const handleDelete = async () => {
   deleting.value = true
   
   try {
-    await deleteShare(currentShare.value.share_id)
-    
-    // 通知父组件删除成功
-    emit('delete', currentShare.value.share_id)
-    
-    // 关闭弹窗
-    deletePopupRef.value?.close()
-    currentShare.value = null
+    // 直接调用云函数删除，不要自行刷新数据
+    const todoBookCo = uniCloud.importObject('todobook-co')
+    const result = await todoBookCo.deleteShare(currentShare.value.share_id)
     
+    if (result.code === 0) {
+      // 通知父组件删除成功，由父组件负责刷新数据
+      emit('delete', currentShare.value.share_id)
+      
+      // 关闭弹窗
+      deletePopupRef.value?.close()
+      currentShare.value = null
+      
+      // 显示成功提示
+      uni.showToast({
+        title: '分享已删除',
+        icon: 'success'
+      })
+    } else {
+      throw new Error(result.message)
+    }
   } catch (error) {
     console.error('删除分享失败:', error)
+    uni.showToast({
+      title: error.message || '删除失败',
+      icon: 'none'
+    })
   } finally {
     deleting.value = false
   }
@@ -234,9 +249,17 @@ const handleDelete = async () => {
 }
 
 .share-items {
+  // 确保列表容器不会超出
+  width: 100%;
+  overflow: hidden;
+  
   .share-item {
-    padding: 20px;
+    padding: 12rpx 16rpx; // 使用rpx单位，减少内边距
     border-bottom: 1px solid #f0f0f0;
+    // 确保每个分享项不会超出容器
+    width: 100%;
+    box-sizing: border-box;
+    overflow: hidden;
     
     &:last-child {
       border-bottom: none;
@@ -262,36 +285,69 @@ const handleDelete = async () => {
   
   .project-details {
     flex: 1;
+    min-width: 0;
+    // 确保项目详情不会超出可用空间
+    max-width: calc(100% - 52px); // 减去图标宽度和边距
+    overflow: hidden;
+    
+    // 小屏幕适配
+    @media (max-width: 375px) {
+      max-width: calc(100% - 48px);
+    }
     
     .project-name {
       display: block;
-      font-size: 16px;
+      font-size: 15px; // 稍微减小字体
       font-weight: 500;
       color: #333333;
       margin-bottom: 4px;
+      word-break: break-all;
+      overflow-wrap: break-word;
+      // 限制项目名称的行数，避免过长
+      display: -webkit-box;
+      -webkit-line-clamp: 2;
+      -webkit-box-orient: vertical;
+      overflow: hidden;
+      line-height: 1.3;
     }
     
     .project-desc {
       display: block;
-      font-size: 14px;
+      font-size: 12px; // 进一步减小字体
       color: #666666;
       line-height: 1.4;
       margin-bottom: 8px;
+      word-break: break-all;
+      overflow-wrap: break-word;
+      // 限制描述的行数，避免过长
+      display: -webkit-box;
+      -webkit-line-clamp: 2;
+      -webkit-box-orient: vertical;
+      overflow: hidden;
+      
+      // 小屏幕适配
+      @media (max-width: 375px) {
+        font-size: 11px;
+        -webkit-line-clamp: 1; // 小屏幕上限制为1行
+      }
     }
     
     .share-meta {
       display: flex;
       flex-wrap: wrap;
-      gap: 12px;
+      gap: 6px 10px; // 减小间距
       
       .meta-item {
         display: flex;
         align-items: center;
-        font-size: 12px;
+        font-size: 11px; // 减小字体
         color: #999999;
+        min-width: 0;
+        flex-shrink: 1;
         
         uni-icons {
           margin-right: 2px;
+          flex-shrink: 0;
         }
       }
     }
@@ -299,11 +355,18 @@ const handleDelete = async () => {
 }
 
 .share-code-section {
+  // 确保父容器不会超出屏幕
+  width: 100%;
+  overflow: hidden;
+  
   .share-code-container {
     background-color: #f8f9fa;
     border-radius: 8px;
     padding: 12px 16px;
     border: 1px solid #e9ecef;
+    // 确保容器不会超出父元素
+    box-sizing: border-box;
+    width: 100%;
     
     .share-code-label {
       display: block;
@@ -315,31 +378,65 @@ const handleDelete = async () => {
     .share-code {
       display: block;
       font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
-      font-size: 18px;
+      font-size: 14px; // 进一步减小字体
       font-weight: 600;
       color: #007AFF;
-      letter-spacing: 1px;
+      letter-spacing: 0.2px; // 进一步减小字符间距
       margin-bottom: 8px;
+      word-break: break-all;
+      overflow-wrap: break-word;
+      // 确保分享码不会溢出
+      max-width: 100%;
+      overflow: hidden;
+      line-height: 1.2;
+      
+      // 小屏幕适配
+      @media (max-width: 375px) {
+        font-size: 12px;
+        letter-spacing: 0.1px;
+      }
     }
     
     .share-actions {
       display: flex;
       gap: 8px;
+      flex-wrap: wrap;
+      // 确保按钮行不会超出容器
+      width: 100%;
       
       .action-btn {
         display: flex;
         align-items: center;
-        padding: 6px 12px;
+        padding: 4px 8px; // 进一步减少内边距
         border-radius: 6px;
         border: 1px solid;
+        min-width: 50px; // 减小最小宽度
+        max-width: calc(50% - 4px); // 限制最大宽度，确保两个按钮能在一行显示
+        flex-shrink: 1; // 允许收缩
+        justify-content: center; // 居中对齐
+        box-sizing: border-box;
         
         &:active {
           opacity: 0.7;
         }
         
         .action-text {
-          font-size: 12px;
-          margin-left: 4px;
+          font-size: 11px; // 减小字体
+          margin-left: 3px; // 减小间距
+          white-space: nowrap;
+          overflow: hidden;
+          text-overflow: ellipsis;
+        }
+        
+        // 小屏幕适配
+        @media (max-width: 375px) {
+          padding: 3px 6px;
+          min-width: 45px;
+          
+          .action-text {
+            font-size: 10px;
+            margin-left: 2px;
+          }
         }
         
         &.copy-btn {
diff --git a/pages/settings/composables/useShareData.js b/pages/settings/composables/useShareData.js
index 6b377c5..7e9c135 100644
--- a/pages/settings/composables/useShareData.js
+++ b/pages/settings/composables/useShareData.js
@@ -75,6 +75,9 @@ export function useShareData() {
    * 加载我的分享列表
    */
   const loadMyShares = async () => {
+    shareLoading.value = true
+    error.value = null
+    
     try {
       const todoBookCo = uniCloud.importObject('todobook-co')
       const result = await todoBookCo.getMyShares()
@@ -88,6 +91,9 @@ export function useShareData() {
       console.error('加载分享列表失败:', err)
       error.value = err.message
       myShares.value = []
+      throw err
+    } finally {
+      shareLoading.value = false
     }
   }
 
diff --git a/pages/settings/share-management.vue b/pages/settings/share-management.vue
index 5e25219..d178a37 100644
--- a/pages/settings/share-management.vue
+++ b/pages/settings/share-management.vue
@@ -78,7 +78,10 @@ import ImportShare from './components/ImportShare.vue'
 import { useShareData } from './composables/useShareData.js'
 
 // 组合式函数
-const { myShares, loading, loadMyShares } = useShareData()
+const { myShares, shareLoading, loadMyShares } = useShareData()
+
+// 使用shareLoading作为加载状态
+const loading = shareLoading
 
 // 响应式数据
 const scrollHeight = ref(0)
@@ -86,9 +89,12 @@ const scrollHeight = ref(0)
 // 计算属性
 const computedScrollHeight = computed(() => {
   const systemInfo = uni.getSystemInfoSync()
-  const navBarHeight = 44 // 导航栏高度
+  // 获取更准确的导航栏高度
   const statusBarHeight = systemInfo.statusBarHeight || 0
-  return systemInfo.windowHeight - navBarHeight - statusBarHeight
+  const navBarHeight = 44 + statusBarHeight // uni-nav-bar的实际高度包含状态栏
+  const safeAreaBottom = systemInfo.safeAreaInsets?.bottom || 0
+  
+  return systemInfo.windowHeight - navBarHeight - safeAreaBottom
 })
 
 // 方法
@@ -101,12 +107,22 @@ const loadShares = async () => {
     await loadMyShares()
   } catch (error) {
     console.error('加载分享列表失败:', error)
+    uni.showToast({
+      title: '加载失败',
+      icon: 'none'
+    })
   }
 }
 
 const handleDeleteShare = async (shareId) => {
-  // ShareList组件内部已处理删除逻辑和列表刷新
+  // 删除成功后重新加载分享列表
   console.log('分享已删除:', shareId)
+  
+  try {
+    await loadShares()
+  } catch (error) {
+    console.error('刷新分享列表失败:', error)
+  }
 }
 
 const handleImportSuccess = () => {
@@ -123,18 +139,28 @@ const handleImportSuccess = () => {
   }, 1500)
 }
 
+// 更新高度的方法
+const updateScrollHeight = () => {
+  scrollHeight.value = computedScrollHeight.value
+}
+
 // 生命周期
 onLoad(() => {
-  scrollHeight.value = computedScrollHeight.value
+  updateScrollHeight()
 })
 
 onShow(() => {
-  // 每次显示页面时刷新数据
+  // 每次显示页面时刷新数据和高度
+  updateScrollHeight()
   loadShares()
 })
 
 onMounted(() => {
   loadShares()
+  // 监听窗口大小变化
+  uni.onWindowResize(() => {
+    updateScrollHeight()
+  })
 })
 </script>
 
@@ -142,36 +168,67 @@ onMounted(() => {
 .share-management {
   background-color: #f8f9fa;
   min-height: 100vh;
+  display: flex;
+  flex-direction: column;
 }
 
 .content-scroll {
-  padding: 16px;
+  padding: 12rpx 16rpx; // 使用rpx单位，小屏幕上减少padding
+  flex: 1;
+  
+  // 小屏幕适配
+  @media (max-width: 375px) {
+    padding: 8rpx 12rpx;
+  }
+  
+  // 超小屏幕适配
+  @media (max-width: 320px) {
+    padding: 6rpx 10rpx;
+  }
 }
 
 .section {
-  margin-bottom: 20px;
+  margin-bottom: 16rpx; // 使用rpx单位，减少间距
   
   &:last-child {
     margin-bottom: 0;
   }
+  
+  // 小屏幕适配
+  @media (max-width: 375px) {
+    margin-bottom: 12rpx;
+  }
 }
 
 .section-header {
   display: flex;
   align-items: center;
-  margin-bottom: 12px;
+  margin-bottom: 10rpx; // 使用rpx单位，减少间距
+  flex-wrap: wrap; // 允许换行，防止在小屏幕上溢出
   
   .section-title {
-    font-size: 18px;
+    font-size: 16px; // 减小字体
     font-weight: 600;
     color: #333333;
-    margin-left: 8px;
+    margin-left: 6px; // 减小间距
+    flex-shrink: 0;
+    
+    // 小屏幕适配
+    @media (max-width: 375px) {
+      font-size: 15px;
+    }
   }
   
   .share-count {
-    font-size: 14px;
+    font-size: 13px; // 减小字体
     color: #666666;
-    margin-left: 8px;
+    margin-left: 6px; // 减小间距
+    flex-shrink: 0;
+    
+    // 小屏幕适配
+    @media (max-width: 375px) {
+      font-size: 12px;
+    }
   }
 }
 
