diff --git a/pages/settings/components/ImportShare.vue b/pages/settings/components/ImportShare.vue
index bd66699..af7b1c8 100644
--- a/pages/settings/components/ImportShare.vue
+++ b/pages/settings/components/ImportShare.vue
@@ -186,9 +186,58 @@ const handleImport = async () => {
     
   } catch (error) {
     console.error('导入失败:', error)
+    
+    // 如果是重复导入错误，显示确认对话框
+    if (error.code === 1005) {
+      await showDuplicateImportDialog(error.data.existingBook)
+    }
   }
 }
 
+const showDuplicateImportDialog = async (existingBook) => {
+  return new Promise((resolve) => {
+    const formatDate = (dateStr) => {
+      const date = new Date(dateStr)
+      return date.toLocaleString('zh-CN', {
+        year: 'numeric',
+        month: '2-digit',
+        day: '2-digit',
+        hour: '2-digit',
+        minute: '2-digit'
+      })
+    }
+    
+    uni.showModal({
+      title: '重复导入提醒',
+      content: `您已在 ${formatDate(existingBook.created_at)} 导入过项目册"${existingBook.title}"。\n\n是否仍要创建一个新的副本？`,
+      confirmText: '仍要导入',
+      cancelText: '取消',
+      success: async (res) => {
+        if (res.confirm) {
+          try {
+            // 允许重复导入
+            await importByShareCode(shareCode.value, { allowDuplicate: true })
+            
+            // 通知父组件导入成功
+            emit('import-success')
+            
+            // 清理状态
+            clearPreview()
+            shareCode.value = ''
+            
+            resolve(true)
+          } catch (duplicateError) {
+            console.error('重复导入失败:', duplicateError)
+            resolve(false)
+          }
+        } else {
+          resolve(false)
+        }
+      }
+    })
+  })
+}
+
 const clearPreview = () => {
   previewData.value = null
 }
diff --git a/pages/settings/composables/useShareData.js b/pages/settings/composables/useShareData.js
index fe079b1..292b449 100644
--- a/pages/settings/composables/useShareData.js
+++ b/pages/settings/composables/useShareData.js
@@ -100,15 +100,18 @@ export function useShareData() {
   /**
    * 通过分享码导入项目册
    * @param {string} shareCode - 分享码
+   * @param {Object} options - 导入选项
+   * @param {boolean} options.allowDuplicate - 是否允许重复导入
    * @returns {Promise<Object>} 导入结果
    */
-  const importByShareCode = async (shareCode) => {
+  const importByShareCode = async (shareCode, options = {}) => {
+    const { allowDuplicate = false } = options
     importLoading.value = true
     error.value = null
     
     try {
       const todoBookCo = uniCloud.importObject('todobook-co')
-      const result = await todoBookCo.importByCode(shareCode)
+      const result = await todoBookCo.importByCode(shareCode, allowDuplicate)
       
       if (result.code === 0) {
         // 导入成功后重新加载项目册列表并触发更新事件
@@ -130,16 +133,27 @@ export function useShareData() {
           icon: 'success'
         })
         return result.data
+      } else if (result.code === 1005) {
+        // 重复导入的特殊处理
+        const duplicateError = new Error(result.message)
+        duplicateError.code = 1005
+        duplicateError.data = result.data
+        throw duplicateError
       } else {
         throw new Error(result.message)
       }
     } catch (err) {
       console.error('导入分享失败:', err)
       error.value = err.message
-      uni.showToast({
-        title: err.message,
-        icon: 'none'
-      })
+      
+      // 对于重复导入错误，不显示toast，由调用方处理
+      if (err.code !== 1005) {
+        uni.showToast({
+          title: err.message,
+          icon: 'none'
+        })
+      }
+      
       throw err
     } finally {
       importLoading.value = false
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/index.obj.js b/uniCloud-alipay/cloudfunctions/todobook-co/index.obj.js
index fe4dc47..8fd69d6 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/index.obj.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/index.obj.js
@@ -132,14 +132,14 @@ module.exports = {
   /**
    * 通过分享码导入项目册
    */
-  async importByCode(shareCode) {
-    return await importByCode.call(this, { shareCode })
+  async importByCode(shareCode, allowDuplicate = false) {
+    return await importByCode.call(this, shareCode, allowDuplicate)
   },
 
   /**
    * 获取分享预览
    */
   async getSharePreview(shareCode) {
-    return await getSharePreview.call(this, { shareCode })
+    return await getSharePreview.call(this, shareCode)
   }
 }
\ No newline at end of file
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/get-share-preview.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/get-share-preview.js
index 9ea6597..9444862 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/get-share-preview.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/get-share-preview.js
@@ -2,7 +2,7 @@
  * 获取分享预览信息
  */
 
-module.exports = async function getSharePreview({ shareCode }) {
+module.exports = async function getSharePreview(shareCode) {
   try {
     const db = this.db
     
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/import-by-code.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/import-by-code.js
index 9ea5482..b871f5d 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/import-by-code.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/import-by-code.js
@@ -4,7 +4,8 @@
 
 const { cloneTodoBook } = require('./utils/todobook-cloner')
 
-module.exports = async function importByCode({ shareCode }) {
+module.exports = async function importByCode(shareCode, allowDuplicate = false) {
+  
   try {
     const db = this.db
     const userId = this.uid
@@ -57,12 +58,37 @@ module.exports = async function importByCode({ shareCode }) {
       }
     }
     
-    // 5. 克隆分享模板为新项目册
+    // 5. 检查是否已经导入过该分享（如果不允许重复）
+    if (!allowDuplicate) {
+      const existingImports = await bookCollection.where({
+        creator_id: userId,
+        imported_from_share_id: shareRecord._id
+      }).get()
+      
+      if (existingImports.data.length > 0) {
+        const existingBook = existingImports.data[0]
+        return {
+          code: 1005,
+          message: '您已经导入过这个分享项目册',
+          data: {
+            existingBook: {
+              id: existingBook._id,
+              title: existingBook.title,
+              created_at: existingBook.created_at
+            },
+            allowDuplicate: true
+          }
+        }
+      }
+    }
+    
+    // 6. 克隆分享模板为新项目册
+    const titleSuffix = allowDuplicate ? '（来自分享）' : '（来自分享）'
     const newBookId = await cloneTodoBook(db, sharedTodoBookId, {
       includeComments: shareRecord.include_comments,
       isTemplate: false,
       newCreatorId: userId,
-      titleSuffix: '（来自分享）'
+      titleSuffix: titleSuffix
     })
     
     // 验证克隆结果的数据完整性
@@ -98,7 +124,12 @@ module.exports = async function importByCode({ shareCode }) {
       console.error('🔍 [导入验证] 验证导入结果时出错:', verifyError)
     }
     
-    // 6. 更新分享统计
+    // 7. 为导入的项目册添加来源标记
+    await bookCollection.doc(newBookId).update({
+      imported_from_share_id: shareRecord._id
+    })
+    
+    // 8. 更新分享统计
     await shareCollection.doc(shareRecord._id).update({
       share_count: db.command.inc(1),
       last_import_at: new Date()
diff --git a/uniCloud-alipay/database/todobooks.schema.json b/uniCloud-alipay/database/todobooks.schema.json
index dc37366..cb54980 100644
--- a/uniCloud-alipay/database/todobooks.schema.json
+++ b/uniCloud-alipay/database/todobooks.schema.json
@@ -117,6 +117,10 @@
 		"template_created_at": {
 			"bsonType": "timestamp",
 			"description": "模板创建时间（仅分享模板使用）"
+		},
+		"imported_from_share_id": {
+			"bsonType": "string",
+			"description": "导入来源分享记录ID（用于防止重复导入）"
 		}
 	}
 }