diff --git a/pages/tasks/composables/useTaskComments.js b/pages/tasks/composables/useTaskComments.js
index 184a10d..e1ea4ed 100644
--- a/pages/tasks/composables/useTaskComments.js
+++ b/pages/tasks/composables/useTaskComments.js
@@ -311,10 +311,19 @@ export function useTaskComments() {
 	/**
 	 * @description 检查当前用户是否可以编辑指定评论
 	 * @param {object} comment - 评论对象
+	 * @param {object} task - 任务对象，用于判断是否为项目册创建者
 	 * @returns {boolean} - 如果可以编辑返回 true，否则返回 false
 	 */
-	const canEditComment = (comment) => {
-		return currentUser.value && comment.user_id === currentUser.value.uid
+	const canEditComment = (comment, task) => {
+		if (!currentUser.value) return false
+		
+		// 如果是匿名用户的评论，只有项目册创建者可以编辑
+		if (comment.user_id && comment.user_id.startsWith('anonymous_user_')) {
+			return task && task.todobook_creator_id === currentUser.value.uid
+		}
+		
+		// 普通评论只有作者可以编辑
+		return comment.user_id === currentUser.value.uid
 	}
 
 	/**
@@ -326,6 +335,12 @@ export function useTaskComments() {
 	const canDeleteComment = (comment, task) => {
 		if (!currentUser.value) return false
 		
+		// 如果是匿名用户的评论，只有项目册创建者可以删除
+		if (comment.user_id && comment.user_id.startsWith('anonymous_user_')) {
+			return task && task.todobook_creator_id === currentUser.value.uid
+		}
+		
+		// 普通评论：作者或项目册创建者都可以删除
 		if (comment.user_id === currentUser.value.uid) {
 			return true
 		}
diff --git a/pages/tasks/detail.vue b/pages/tasks/detail.vue
index fe424f1..6c9c901 100644
--- a/pages/tasks/detail.vue
+++ b/pages/tasks/detail.vue
@@ -216,7 +216,7 @@
 										<text class="action-text">回复</text>
 									</view>
 									<view 
-										v-if="canEditComment(comment)" 
+										v-if="canEditComment(comment, task)" 
 										class="action-btn" 
 										@click="editComment(comment)">
 										<text class="action-text">编辑</text>
@@ -257,7 +257,7 @@
 									<!-- 回复操作 -->
 									<view class="comment-actions">
 										<view 
-											v-if="canEditComment(reply)" 
+											v-if="canEditComment(reply, task)" 
 											class="action-btn" 
 											@click="editComment(reply)">
 											<text class="action-text">编辑</text>
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/delete-task-comment.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/delete-task-comment.js
index 3f7cbeb..5825aae 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/delete-task-comment.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/delete-task-comment.js
@@ -49,7 +49,15 @@ async function deleteTaskComment(params) {
     
     // 检查权限：评论作者或项目册创建者可以删除
     let canDelete = false
-    if (comment.user_id === uid) {
+    
+    // 如果是匿名用户的评论，只有项目册创建者可以删除
+    if (comment.user_id && comment.user_id.startsWith('anonymous_user_')) {
+      // 检查是否是项目册创建者
+      const creatorCheckResult = await checkIsCreator(this, uid, task.todobook_id)
+      if (creatorCheckResult.success && creatorCheckResult.isCreator) {
+        canDelete = true
+      }
+    } else if (comment.user_id === uid) {
       canDelete = true
     } else {
       // 检查是否是项目册创建者
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/get-task-comments.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/get-task-comments.js
index 8ff692e..320727e 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/get-task-comments.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/get-task-comments.js
@@ -70,25 +70,34 @@ async function getTaskComments(params) {
         
         // 为评论添加用户信息
         activeComments.forEach(comment => {
-          const user = userMap[comment.user_id]
-          if (user) {
-            // 优先级：昵称 > 用户名 > 手机号脱敏 > 邮箱前缀 > 默认值
-            let displayName = '用户'
-            if (user.nickname && user.nickname.trim()) {
-              displayName = user.nickname.trim()
-            } else if (user.username && user.username.trim()) {
-              displayName = user.username.trim()
-            } else if (user.mobile) {
-              displayName = user.mobile.substring(0, 3) + '****' + user.mobile.substring(7)
-            } else if (user.email) {
-              displayName = user.email.split('@')[0]
-            }
-            
-            comment.user_nickname = displayName
-            comment.user_avatar = user.avatar_file || ''
+          // 检查是否为匿名用户ID
+          if (comment.user_id && comment.user_id.startsWith('anonymous_user_')) {
+            // 匿名用户处理
+            const userLetter = comment.user_id.split('_')[2] // 提取字母部分
+            comment.user_nickname = `用户${userLetter}`
+            comment.user_avatar = '' // 匿名用户不显示头像
           } else {
-            comment.user_nickname = '用户'
-            comment.user_avatar = ''
+            // 真实用户处理
+            const user = userMap[comment.user_id]
+            if (user) {
+              // 优先级：昵称 > 用户名 > 手机号脱敏 > 邮箱前缀 > 默认值
+              let displayName = '用户'
+              if (user.nickname && user.nickname.trim()) {
+                displayName = user.nickname.trim()
+              } else if (user.username && user.username.trim()) {
+                displayName = user.username.trim()
+              } else if (user.mobile) {
+                displayName = user.mobile.substring(0, 3) + '****' + user.mobile.substring(7)
+              } else if (user.email) {
+                displayName = user.email.split('@')[0]
+              }
+              
+              comment.user_nickname = displayName
+              comment.user_avatar = user.avatar_file || ''
+            } else {
+              comment.user_nickname = '用户'
+              comment.user_avatar = ''
+            }
           }
           
           // 确保有唯一ID
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/update-task-comment.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/update-task-comment.js
index c60fada..c864257 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/update-task-comment.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/comments/update-task-comment.js
@@ -56,8 +56,22 @@ async function updateTaskComment(params) {
     
     const comment = comments[commentIndex]
     
-    // 检查权限：只有评论作者可以编辑
-    if (comment.user_id !== uid) {
+    // 检查权限：评论作者或项目册创建者可以编辑
+    let canEdit = false
+    
+    // 如果是匿名用户的评论，只有项目册创建者可以编辑
+    if (comment.user_id && comment.user_id.startsWith('anonymous_user_')) {
+      // 检查是否是项目册创建者
+      const { checkIsCreator } = require('../../lib/utils/permission')
+      const creatorCheckResult = await checkIsCreator(this, uid, task.todobook_id)
+      if (creatorCheckResult.success && creatorCheckResult.isCreator) {
+        canEdit = true
+      }
+    } else if (comment.user_id === uid) {
+      canEdit = true
+    }
+    
+    if (!canEdit) {
       return createErrorResponse(ERROR_CODES.FORBIDDEN, '无权限编辑此评论')
     }
     
diff --git a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/utils/todobook-cloner.js b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/utils/todobook-cloner.js
index 1bd5220..d4f0ebe 100644
--- a/uniCloud-alipay/cloudfunctions/todobook-co/module/share/utils/todobook-cloner.js
+++ b/uniCloud-alipay/cloudfunctions/todobook-co/module/share/utils/todobook-cloner.js
@@ -93,6 +93,39 @@ async function cloneTodoBook(db, originalBookId, options = {}) {
     
     let taskCount = 0
     const taskIdMapping = new Map() // 记录原任务ID到新任务ID的映射
+    const userAnonymizeMapping = new Map() // 用户匿名化映射
+    let anonymousUserCounter = 0 // 匿名用户计数器
+    
+    // 辅助函数：获取匿名用户ID
+    const getAnonymousUserId = (originalUserId) => {
+      if (!userAnonymizeMapping.has(originalUserId)) {
+        anonymousUserCounter++
+        const anonymousId = `anonymous_user_${String.fromCharCode(64 + anonymousUserCounter)}` // A, B, C...
+        userAnonymizeMapping.set(originalUserId, anonymousId)
+      }
+      return userAnonymizeMapping.get(originalUserId)
+    }
+    
+    // 辅助函数：匿名化评论数组
+    const anonymizeComments = (comments) => {
+      if (!comments || !Array.isArray(comments)) return []
+      
+      return comments.map(comment => {
+        const anonymizedComment = { ...comment }
+        // 匿名化主评论的用户ID
+        anonymizedComment.user_id = getAnonymousUserId(comment.user_id)
+        
+        // 匿名化回复中的用户ID
+        if (comment.replies && Array.isArray(comment.replies)) {
+          anonymizedComment.replies = comment.replies.map(reply => ({
+            ...reply,
+            user_id: getAnonymousUserId(reply.user_id)
+          }))
+        }
+        
+        return anonymizedComment
+      })
+    }
     
     for (const originalTask of tasksResult.data) {
       const newTaskData = {
@@ -113,8 +146,9 @@ async function cloneTodoBook(db, originalBookId, options = {}) {
         completed_at: null,
         // 如果是分享模板，设置模板创建者
         creator_id: isTemplate ? templateCreatorId : newCreatorId,
-        // 处理评论：如果需要包含评论则复制，否则设为空数组
-        comments: includeComments ? (originalTask.comments || []) : []
+        // 处理评论：如果需要包含评论则复制，对于分享模板进行匿名化处理
+        comments: includeComments ? 
+          (isTemplate ? anonymizeComments(originalTask.comments || []) : (originalTask.comments || [])) : []
       }
       
       const newTaskResult = await taskCollection.add(newTaskData)
